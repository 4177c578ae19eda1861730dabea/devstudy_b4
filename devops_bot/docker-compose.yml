services:
  bot:
    build:
      dockerfile: Dockerfile
      context: ./bot
    env_file:
      - './.env'

  db:
    build:
      dockerfile:  Dockerfile
      context: ./db
    environment:
      POSTGRES_USER: $PG_USER
      POSTGRES_PASSWORD: $PG_PASSWORD
      POSTGRES_DB: $PG_DBNAME
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
    command: |
      postgres
      -c archive_mode=on
      -c archive_command='cp %p /pg_archive/%f'
      -c max_wal_senders=10
      -c wal_level=replica
      -c wal_log_hints=on
      -c max_replication_slots=10
      -c log_replication_commands=on
      -c log_statement=all
    ports:
      - 5432:5432
    volumes:
      - ./table.sql:/docker-entrypoint-initdb.d/table.sql
  db_repl:
    build:
      dockerfile:  Dockerfile
      context: ./db_repl
    environment:
      PGUSER: $PG_REPL_USER
      PGPASSWORD: $PG_REPL_PASSWORD
      PGHOST: db
    command: |
      bash -c "
      rm -rf /var/lib/postgresql/data/* && pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot;
      chown -R postgres:postgres /var/lib/postgresql/data && chmod 0700 /var/lib/postgresql/data;
      su postgres -c postgres;
      "
    depends_on:
      - db
    restart: always
    ports:
      - $PG_REPL_PORT:5432
  
